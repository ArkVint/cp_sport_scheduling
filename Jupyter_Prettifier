{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": [
    "%matplotlib inline\n",
    "import numpy as np\n",
    "import pandas as pd\n",
    "import matplotlib.pylab as pl\n",
    "import ast\n",
    "import re, ast\n",
    "\n",
    "\n",
    "\n",
    "s = input(\"Input the string with 0 and 1\\n\") # string with bytes in one line\n",
    "nbDays = int(input(\"Input number of days you want to fill\\n\")) #number of days in championship\n",
    "nbTeams = 22 # number of teams in championship\n",
    "nbStadiums = 22 # number of stadiums in championship\n",
    "\n",
    "ls = re.sub('\\s+', ',', s)\n",
    "a = np.array(ast.literal_eval(ls)).reshape(nbTeams, nbStadiums, nbDays)\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "b = np.zeros(a.shape[0] * a.shape[2], dtype='object').reshape(a.shape[0], a.shape[2])\n",
    "d = {'team_home': [], 'team_opponent': [], 'day': []}\n",
    "for i in range(a.shape[0]):\n",
    "    for j in range(a.shape[1]):\n",
    "        for k in range(a.shape[2]):\n",
    "            if a[i][j][k]:\n",
    "                d['team_home'].append(i + 1)\n",
    "                d['team_opponent'].append(j + 1)\n",
    "                d['day'].append(k + 1)              \n",
    "                \n",
    "                \n",
    "d = pd.DataFrame(d)\n",
    "d = d.to_numpy()\n",
    "d = d.ravel()\n",
    "_dict = {}\n",
    "for A, B in zip([i for i in [-22, -21, -20, -19, -18, -17, -16, -15, -14, -13, -12, -11, -10, -9, -8, -7, -6, -5, -4, -3, -2, -1, 1, 2, 3, 4, 5, 6,7 ,8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22]], '-АДМ -АМР -СИБ -БАР -АВГ -СЮЛ -АВТ -ММГ -ТРК -АКБ -НХК -КРС -СПР -СОЧ -ТОР -ДИН -ЛОК -СЕВ -СКА -ВИТ -ДМН -ЦСК АДМ АМР СИБ БАР АВГ СЮЛ АВТ ММГ ТРК АКБ НХК КРС СПР СОЧ ТОР ДИН ЛОК СЕВ СКА ВИТ ДМН ЦСК'.split(\" \")):\n",
    "    _dict[A] = B\n",
    "    \n",
    "for i in range(len(d) - 2):\n",
    "    if i % 3 == 0:\n",
    "        b[d[i] - 1][d[i + 2] - 1] = f\"{_dict[d[i + 1]]}\"\n",
    "        b[d[i + 1] - 1][d[i + 2] - 1] = f\"-{_dict[d[i]]}\"\n",
    "\n",
    "\n",
    "\n",
    "\n",
    "    \n",
    "nx = a.shape[2]\n",
    "ny = a.shape[0]\n",
    "x_axis = [i for i in range(1, a.shape[2] + 1)]\n",
    "y_axis = 'АДМ АМР СИБ БАР АВГ СЮЛ АВТ ММГ ТРК АКБ НХК КРС СПР СОЧ ТОР ДИН ЛОК СЕВ СКА ВИТ ДМН ЦСК'.split(\" \")\n",
    "pl.figure()\n",
    "\n",
    "\n",
    "tb = pl.table(cellText=b, loc=(0,0), rowLabels=y_axis, colLabels=x_axis, cellLoc='center')\n",
    "\n",
    "\n",
    "\n",
    "for i in range(0, a.shape[2]):\n",
    "    tb.get_celld()[(0,i)].set_facecolor(\"#56b5fd\")\n",
    "  \n",
    "tc = tb.properties()['child_artists']\n",
    "\n",
    "for cell in tc: \n",
    "    cell.set_height(1)\n",
    "    cell.set_width(1)\n",
    "\n",
    "\n",
    "        \n",
    "tb.set_fontsize(50)\n",
    "ax = pl.gca()\n",
    "ax.set_xticks([])\n",
    "ax.set_yticks([])\n",
    "ax.set_ylabel(\"Команда\")\n",
    "ax.set_xlabel(\"День\")"
   ]
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.8.10"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 4
}
